#!/usr/bin/env pythonw
# -*- coding: utf-8 -*-
"""
know_you_background.py
~~~~~~~~~~~~~~~~~~~~~~

Фоновый «факт-бот» для Windows:

• Через случайные интервалы (30-120 мин по умолчанию) запрашивает у OpenAI
  один короткий факт и показывает всплывающее окно «Знаете ли вы, что…».
• Каждый запрос выбирает СЛУЧАЙНУЮ предметную область из большого пула
  (≈150 тегов), чтобы темы постоянно менялись.
• К промпту добавляется nonce-токен, что практически исключает повтор
  одинаковых формулировок.

Запускайте через **pythonw.exe** или упакуйте в `.exe` с
`pyinstaller --noconsole`. Ярлык положите в папку автозагрузки
(`Win+R → shell:startup`) либо оформите задачу в Планировщике.
"""

import os
import random
import secrets
import time
import tkinter as tk
from tkinter import messagebox

from openai import OpenAI          # pip install --upgrade openai>=1.0


# ────────── настройки ──────────
MODEL_NAME     = "gpt-4o-mini"     # замените на "o3", если доступен
TEMPERATURE    = 0.9
MIN_DELAY_MIN  = 0               # минимум минут между фактами
MAX_DELAY_MIN  = 1               # максимум минут между фактами
TIMEOUT_MS     = 20_000            # окно закрывается через 10 секунд

TOPIC_POOL = [
    # — естественные науки —
    "астрономия", "космология", "планетология", "квантовая механика",
    "физика частиц", "оптика", "акустика", "термодинамика", "материаловедение",
    "органическая химия", "неорганическая химия", "биохимия", "генетика",
    "микробиология", "иммунология", "неврология", "биология растений",
    "зоология", "экология", "этология", "эволюционная биология", "палеонтология",
    "медицина", "кардиология", "фармакология", "психология", "психиатрия",
    "климатология", "метеорология", "океанология", "геология", "сейсмология",
    "вулканология", "минералогия",
    # — математика и логика —
    "математический анализ", "алгебра", "топология", "теория чисел",
    "статистика", "теория вероятностей", "криптография", "логика",
    "теория игр", "комбинаторика", "фракталы", "вычислительная математика",
    # — инженерия и технологии —
    "робототехника", "искусственный интеллект", "машинное обучение",
    "квантовые вычисления", "нанотехнологии", "ядерная энергетика",
    "возобновляемая энергетика", "аэронавтика", "космические технологии",
    "автономные автомобили", "3D-печать", "биотехнологии", "генная инженерия",
    "интернет вещей", "кибербезопасность", "блокчейн", "сетевые технологии",
    "микроэлектроника", "оптоэлектроника", "телекоммуникации",
    # — история и археология —
    "первобытная история", "Месопотамия", "Шумер", "Древний Китай",
    "Древняя Индия", "Античная Греция", "Древний Рим", "средневековая Европа",
    "Византия", "эпоха Возрождения", "Великие географические открытия",
    "Индустриальная революция", "холодная война", "космическая гонка",
    "современная история", "военная история", "история науки",
    # — культура и гуманитарные —
    "лингвистика", "семиотика", "этнография", "антропология", "мифология",
    "искусствоведение", "живопись", "скульптура", "классическая музыка",
    "джаз", "кинематограф", "фотография", "архитектура", "дизайн",
    "античная философия", "современная философия", "этика", "эстетика",
    "религиоведение", "политология", "экономика", "поведенческая экономика",
    "социология", "правоведение", "криминология",
    # — прикладное и разное —
    "спортивная наука", "пищевые технологии", "эргономика",
    "урбанистика", "демография", "орнитология", "энтомология",
    "ихтиология", "астробиология", "агрономия", "виноделие",
    "пчеловодство", "логистика", "металлургия",
]

client = OpenAI()  # ключ берётся из переменной окружения OPENAI_API_KEY

# ────────── функции ──────────
def fetch_fact() -> str:
    """Запрашивает у модели факт из случайной области, добавляя nonce."""
    topic = random.choice(TOPIC_POOL)
    nonce = secrets.token_urlsafe(10)

    prompt = (
        f"Выбери один интересный факт из области «{topic}» и сформулируй его "
        "точно в одном-двух предложениях, начиная фразой "
        "«Знаете ли вы, что ...». Не упоминай тему явно, не добавляй источников.\n\n"
        f"<RANDOM_NONCE>{nonce}</RANDOM_NONCE>"
    )

    resp = client.chat.completions.create(
        model=MODEL_NAME,
        messages=[{"role": "system", "content": prompt}],
        temperature=TEMPERATURE,
    )
    return resp.choices[0].message.content.strip()




def show_popup(text: str) -> None:
    root = tk.Tk()
    root.withdraw()
    root.attributes("-topmost", True)
    root.lift()
    root.focus_force()
    root.after(TIMEOUT_MS, root.destroy)
    messagebox.showinfo("Знаете ли вы, что...", text, parent=root)



def main() -> None:
    while True:
        try:
            fact = fetch_fact()
            show_popup(fact)
        except Exception as exc:
            print(f"[fact-bot] Ошибка: {exc}", flush=True)

        delay_sec = random.uniform(MIN_DELAY_MIN, MAX_DELAY_MIN) * 60
        time.sleep(delay_sec)


if __name__ == "__main__":
    main()
